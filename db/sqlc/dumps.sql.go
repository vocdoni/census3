// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: dumps.sql

package queries

import (
	"context"
)

const dumpStrategies = `-- name: DumpStrategies :many
SELECT id, predicate, alias, uri FROM strategies
`

func (q *Queries) DumpStrategies(ctx context.Context) ([]Strategy, error) {
	rows, err := q.db.QueryContext(ctx, dumpStrategies)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Strategy
	for rows.Next() {
		var i Strategy
		if err := rows.Scan(
			&i.ID,
			&i.Predicate,
			&i.Alias,
			&i.Uri,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const dumpTokenHolers = `-- name: DumpTokenHolers :many
SELECT token_id, holder_id, balance, block_id, chain_id, external_id FROM token_holders
`

func (q *Queries) DumpTokenHolers(ctx context.Context) ([]TokenHolder, error) {
	rows, err := q.db.QueryContext(ctx, dumpTokenHolers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []TokenHolder
	for rows.Next() {
		var i TokenHolder
		if err := rows.Scan(
			&i.TokenID,
			&i.HolderID,
			&i.Balance,
			&i.BlockID,
			&i.ChainID,
			&i.ExternalID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const dumpTokens = `-- name: DumpTokens :many
SELECT id, name, symbol, decimals, total_supply, creation_block, type_id, synced, tags, chain_id, chain_address, external_id, default_strategy, icon_uri, created_at, last_block, analysed_transfers FROM tokens
`

func (q *Queries) DumpTokens(ctx context.Context) ([]Token, error) {
	rows, err := q.db.QueryContext(ctx, dumpTokens)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Token
	for rows.Next() {
		var i Token
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Symbol,
			&i.Decimals,
			&i.TotalSupply,
			&i.CreationBlock,
			&i.TypeID,
			&i.Synced,
			&i.Tags,
			&i.ChainID,
			&i.ChainAddress,
			&i.ExternalID,
			&i.DefaultStrategy,
			&i.IconUri,
			&i.CreatedAt,
			&i.LastBlock,
			&i.AnalysedTransfers,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
